/* Categorize Films by Rental Performance
 Classify films into performance tiers based on rental frequency and compare their revenue contribution.
 Requirements:
 Use a CASE statement to categorize films as:
 "High Demand": Rented 30+ times | "Medium Demand": Rented 15-29 times | "Low Demand": Rented <15 times
 For each category, calculate: Number of films, Total revenue generated, Average rental rate
 Sort results by revenue contribution (highest to lowest). */
-- CTE to categorize films based on the number of times each film was rented.
WITH demandcat AS (
  SELECT 
    f.film_id,
    f.rental_rate,
    COUNT(*) AS no_of_times_rented,
    -- Use a CASE statement to classify films into demand tiers based on rental frequency.
    CASE
      WHEN COUNT(*) >= 30 THEN 'High Demand'
      WHEN COUNT(*) BETWEEN 15 AND 29 THEN 'Medium Demand'
      ELSE 'Low Demand'
    END AS Demand
  FROM film f
    INNER JOIN inventory i ON f.film_id = i.film_id
    INNER JOIN rental r ON i.inventory_id = r.inventory_id
  GROUP BY 1
  ORDER BY no_of_times_rented DESC
),
-- CTE to calculate revenue, average rental rate, and the number of films for each demand category.
catrevenue AS (
  SELECT 
    d.demand,
    -- Calculate the total revenue generated by each demand category.
    SUM(d.rental_rate * d.no_of_times_rented) AS revenue_per_cat,
    -- Calculate the average rental rate for films within each demand category.
    ROUND(AVG(d.rental_rate), 2) AS avg_rental_rate,
    -- Count the number of films in each demand category.
    COUNT(d.demand) AS film_count
  FROM demandcat d
  GROUP BY 1
)
-- Main query to display the aggregated results for each demand category.
SELECT 
  demand,
  revenue_per_cat,
  avg_rental_rate,
  film_count
FROM catrevenue
-- Order the results by the total revenue per category in descending order to see the most profitable categories first.
ORDER BY revenue_per_cat DESC;
