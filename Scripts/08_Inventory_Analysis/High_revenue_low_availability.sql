
/*Identify Films with High Revenue but Low Availability. 
 (Find films that generate strong revenue per rental but have limited inventory copies, 
 potentially indicating missed business opportunities)*/
-- CTE to calculate revenue metrics for each film including total revenue, 
-- average revenue per rental and inventory count
WITH film_metrics AS (
  SELECT f.film_id,
    f.title,
    SUM(p.amount) AS total_revenue_per_film, -- Total revenue generated by each film
    SUM(p.amount) / COUNT(r.rental_id) AS avg_revenue_per_rental, -- Average revenue per rental for each film 
    COUNT(i.inventory_id) AS inventory_count -- Number of copies in inventory for each film
  FROM film f
    INNER JOIN inventory i ON f.film_id = i.film_id
    INNER JOIN rental r ON i.inventory_id = r.inventory_id
    INNER JOIN payment p ON r.rental_id = p.rental_id
  GROUP BY 1,2
),
-- CTE to calculate overall averages across all films
avg_metrics AS (
  SELECT AVG(avg_revenue_per_rental) AS rental_average_revenue, -- Average revenue per rental across all films
    AVG(inventory_count) AS avg_inventory_count -- Average inventory count across all films
  FROM film_metrics
)
-- Main query to identify films with high revenue but limited availability
SELECT fm.film_id,
  fm.title,
  fm.total_revenue_per_film,
  ROUND(fm.avg_revenue_per_rental,2) AS Average_per_rental,
  ROUND(a.rental_average_revenue,2) AS rental_average_rev,
   fm.inventory_count,
  ROUND(a.avg_inventory_count,2) AS avg_inventory_count
FROM film_metrics fm
  CROSS JOIN avg_metrics a -- Cross join to compare each film against overall averages
WHERE fm.total_revenue_per_film > a.rental_average_revenue -- Filter for films with above average revenue
  AND inventory_count < a.avg_inventory_count -- Filter for films with below average inventory
  ORDER BY fm.film_id;