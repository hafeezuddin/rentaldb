
/*Identify Films with High Revenue but Low Rental Frequency 
 Find films that generate above-average revenue per rental 
 but have below-average rental frequency, 
 indicating potentially undervalued content in your catalog.*/

--CTE to calculate film_metrics - total_revenue, total rentals, avg_revenue (total_revenue_per_filmnue/no_of_times_rented) GROUPED BY film title & ID.
WITH film_metrics AS (
  SELECT f.film_id,
    f.title,
    c.name,
    SUM(p.amount) AS total_revenue_per_film,
    -- calculates total revenue generated by that film.
    COUNT(r.rental_id) AS no_of_times_film_rented,
    --calculates Total no of times film was rented.
    ROUND(SUM(p.amount) / COUNT(r.rental_id), 2) AS avg_revenue_per_rental -- Calculate Average revenue for that film (revenue/times_Rented)
  FROM film f
    INNER JOIN inventory i ON f.film_id = i.film_id
    INNER JOIN rental r ON i.inventory_id = r.inventory_id
    INNER JOIN payment p ON r.rental_id = p.rental_id
    INNER JOIN film_category fc ON f.film_id = fc.film_id
    INNER JOIN category c ON fc.category_id = c.category_id
  GROUP BY 1,2,3
),
--CTE to calculate avg_rental_amount & Rental frequency using film_metrics CTE
avg_metrics AS (
  SELECT AVG(avg_revenue_per_rental) AS avg_rental_amount,
    --FROM film_metrics CTE calculates Avg_rental_amount (avg_revenue_per_film/no_of_films)
    AVG(no_of_times_film_rented) AS avg_no_of_times_film_rented --FROM film_metrics CTE calculates avg_no_of_times_film_rented - Rental frequency (no_of_times_film_rented/no.of.rental_id)
  FROM film_metrics
) 
--Main query to display film data that have above average revenue and below average rental frequency using cross join.
SELECT fm.film_id,
  fm.title,
  fm.name,
  ROUND(fm.avg_revenue_per_rental, 2) AS avg_revenue_per_rental,
  ROUND(a.avg_rental_amount, 2) AS avg_rental_amount_across_all_rentals,
  ROUND(fm.no_of_times_film_rented, 2) AS no_of_times_film_rented,
  ROUND(a.avg_no_of_times_film_rented, 2) AS rental_frequency
FROM film_metrics fm
  CROSS JOIN avg_metrics a
WHERE fm.avg_revenue_per_rental > a.avg_rental_amount
  AND fm.no_of_times_film_rented < a.avg_no_of_times_film_rented
ORDER BY avg_revenue_per_rental DESC;